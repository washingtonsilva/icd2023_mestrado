---
title: "Exame Final - Valor: 35 pontos"
subtitle: "Introdução à Ciência dos Dados 2023"
lang: "pt"
date: today
author:
  - name: Prof. Washington Santos da Silva 
    affiliation: IFMG - Campus Formiga - Mestrado Profissional em Administração.
    affiliation-url: https://www.formiga.ifmg.edu.br/mestrado
format:
  html:
    self-contained: true
    link-external-icon: true
    link-external-newwindow: true
    toc: true
    toc-location: left
    number-sections: false
    smooth-scroll: true
    theme: cerulean
bibliography: bibliografia.bib
csl: associacao-brasileira-de-normas-tecnicas.csl
crossref:
  fig-title: '**Fig.**'
  fig-labels: arabic
  title-delim: "**.**"
---

<style type="text/css">
  body{
  font-size: 12pt;
  text-align: justify
      }
</style>

```{r setup, include = FALSE, warning = FALSE, message = FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)

library(nptest)
library(readr)
library(dplyr)
library(pwr)
library(ggplot2)
library(zoo)
library(dynlm)
library(DescTools)
```



## Instruções

::: {.callout-note icon=false}
### Procedimentos

- Baixe o arquivo compactado `exame_final.zip` disponibilizado na 
sala virtual da disciplina. Este arquivo contém o notebook R que vocês 
utilizarão para resolver as questões, chamado `exame2_modelo.Rmd`, e 
o arquivo de dados `capm.csv`.  

- Acesse a pasta `exames`, dentro do projeto `icd2023` do RStudio.

- Em seguinda, dentro da pasta `exames` crie uma subpasta chamada `exame02`, 
mova o notebook `exame2_modelo.Rmd` para esta subpasta.

- Ainda na pasta `exame02`, crie uma subpasta chamada `dados` e mova o arquivo `camp.csv` para esta subpasta. 

- Finalizados os passos anteriores, utilize o notebook `exame2_modelo.Rmd` 
para resolver as questões.
  
- Após resolver todas as questões que conseguir, processe o notebook para criar 
um arquivo no formato `html`. Para gerar o arquivo, basta clicar no botão 
`Knit` e, em seguida, clicar em: `Knit to HTML`.

- Caso não consiga gerar o arquivo `.html` devido a um erro em uma ou mais 
questões, insira a opção `eval = FALSE` no chunk correspondente: 
`{r, eval = FALSE}`

- Após gerar o arquivo `.html` final, contendo a resolução das questões, 
renomeie o arquivo gerado com o seguinte padrão: `nome_sobrenome.html`.

- Vocês devem fazer o upload de um arquivo `.html` no local apropriado da 
sessão da sala virtual da disciplna sobre o Exame 1.
:::


## Questão 1: Fundamentos de Inferência Estatística: Estimação e Teste de Hipóteses para uma proporção. (15 pontos)

Uma empresa de auditoria deseja estimar a proporção de faturas com erros em uma determinada empresa. Para isso, eles selecionaram aleatoriamente uma amostra de 
200 faturas e encontraram 106 faturas com erros. Sendo $p$, a proporção de 
todas as faturas com erros, responda às seguintes perguntas:


### Questão 1.1 

A pesquisa contém evidências estatisticamente significativas sobre se a 
proporção de faturas com erro seja superior a 50%? 

a. Responda observando o valor-p do teste: $H_0: p = 0.5$ versus $H_A: p > 0.5$, 
utilize um nivel de significância de 5%. Utilize o teste exato implementado na função interna `binom.test()`.

b. Qual foi a estimativa pontual de $p$ e qual foi a estimativa por intervalo, 
com 95% de confiança, obtidas no item a?

c. Reporte o resultado utilizando o padrão definido pela American 
Psychological Association (APA).


### Questão 1.2

Obtenha um intervalo com 95% de confiança para $p$ utilizando bootstrap não-paramétrico e método BCa, utilize 10000 reamostras. Utilize a função 
`np.boot` do pacote `nptest`. Considere que o objeto `amostra` contém os dados obtidos pela auditoria.

```{r, eval = FALSE}
# dados
amostra <- sample(c(rep(1, 106), rep(0, 94)))
```



### Questão 1.3

Se os auditores desejavam ser capazes de detectar uma pequena diferença em $p$, 
conforme @cohen1988, e um poder do teste superior a 80%, eles conseguiram 
o desejado utilizando uma amostra de tamanho ($n$) 200? E Se eles tivessem 
utilizado uma amostra de tamanho 50? (Dica: Segundo @cohen1988, 
uma pequena diferença padronizada ($h$) para $p$ corresponde a 0.2).



## Questão 2: Modelo de Regressão linear Simples (20 pontos)

Os dados necessários estão contidos no arquivo `capm.csv`, esse arquivo contém 
dados mensais, entre Janeiro/2002 e Fevereiro/2018, sobre as seguintes 
variáveis:

variável        Descrição
------------    --------------------------------------------------------
`date`          mês
`sandp`         preço mensal de um carteira do índice Standard \& Poors (500)
`ford`          preço mensal das ações da Ford
`ge`            preço mensal das ações da General Eletric
`microsoft`     preço mensal das ações da Microsoft
`oracle`        preço mensal das ações da Oracle
`ustb3m`        série mensal de rendimentos de títulos do Tesouro dos EUA de 3 meses.

É padrão na literatura acadêmica usar cinco anos de dados (retornos) mensais 
para estimar os betas do CAPM, mas usaremos todas as observações disponíveis no 
arquivo de dados (mais de quinze anos) nesta atividade.

Para responder as questões que se seguem, faça os seguintes procedimentos:


**Proc. 1)** Importe os dados usando os seguintes comandos:

```{r}
#| echo: true
#| eval: false

path <- "dados/capm.csv"

capm <- read_csv2(path,
                  locale = locale("pt"),
                  col_types = cols(date = col_date(format = "%b/%y"),
                                   sandp = col_double(),
                                   ford = col_double(),
                                   ge = col_double(),
                                   microsoft = col_double(),
                                   oracle = col_double(),
                                   ustb3m = col_double())
                  )
glimpse(capm)
```


**Proc. 2)** Para estimar uma equação CAPM para as ações de uma empresa, precisamos 
transformar a série de preços em uma série de retornos e, em seguida, 
transformá-los em retornos excedentes sobre a taxa livre de risco. Seja $R_t$ 
o retorno mensal simples de uma ação, o retorno composto continunamente, 
$r_t$ é definido por:
      
$$
r_t = \ln(1 + R_t) = \ln\Bigl(\frac{P_t}{P_{t-1}}\Bigr) = 100\times(\ln(P_t) - \ln(P_{t-1}))
$$
Portanto, os retornos mensais compostos continuamente podem ser calculados 
simplesmente tomando-se apenas a primeira diferença do logaritmo natural 
dos preços mensais. Após importar o arquivo de dados para o R, calcule os
retornos compostos continuamente para `sandp` e `oracle` usando 
os comandos:

```{r}
#| eval: false
capm <- capm |>
  mutate(
    rsandp = c(NA, 100*diff(log(sandp))),
    roracle = c(NA, 100*diff(log(oracle)))
  ) |> na.omit()
```


**Proc. 3)** Para transformar os retornos em retornos excedentes, precisamos deduzir 
a taxa livre de risco, no nosso caso a taxa dos títulos do Tesouro dos 
EUA a 3 meses, a partir dos retornos compostos continuamente. 

No entanto,  precisamos ter cuidado porque os retornos das ações são mensais, 
enquanto os rendimentos dos títulos do Tesouro são anualizados. 

Ao estimar o modelo, não é importante se usamos taxas anualizadas ou mensais. 
Contudo, é crucial que todas as séries no modelo sejam medidas de forma 
consistente, ou seja, que todas elas sejam taxas mensais ou todas anualizadas. 
      
Transforme os rendimentos de `ustb3m` em uma série de taxas mensais 
(mantendo o nome `ustb3m`), calcule os retornos excedentes do índice S&P (500) 
e das ações da Oracle, criando os objetos `resandp` e \texttt{reoracle} 
que conterão os retornos excedentes e inclua estas séries como novas colunas 
na data.frame `capm` usando os seguintes comandos:

```{r}
#| eval: false
capm <- capm %>%
  mutate(
    ustb3m = ustb3m / 12,
    resandp = rsandp - ustb3m,
    reoracle = roracle - ustb3m
  )
```


**Proc. 4)**  Transforme `resandp` e `reoracle` em séries temporais da classe 
`zoo` e crie os objetos `rsandpst` e `reoraclest`. A sintáxe para 
criar séries temporais da classe `zoo` é a mesma da classe `xts`. Faça esta 
operação usando os comandos:

```{r}
#| eval: false
resandpst <- zoo(x = capm$resandp, order.by = capm$date)
reoraclest <- zoo(x = capm$reoracle, order.by = capm$date)
```


**Proc. 5)** Em econometria, as regressões de séries temporais são frequentemente 
ajustadas por MQO. Assim, em princípio, regressões envolvendo séries temporais 
poderiam ser ajustados como qualquer outro modelo de regressão linear usando 
a função `lm()` se o conjunto de dados for mantido em uma `data.frame`. No 
entanto, esse normalmente não é o caso de dados de séries temporais, que são 
mais convenientemente armazenadas em uma das classes de séries temporais da 
linguagem R , tais como `ts`, `xts`, `zoo` e `tsibble`.

Esses problemas podem ser enfrentados de diferentes maneiras. A solução mais 
simples é fazer os cálculos “manualmente”; ou seja, para calcular lags ou 
diferenças antes de usar a função `lm()`.

Entretanto, o uso de `lm()` com dados em classes de séries temporais tem duas desvantagens: 1) para valores ajustados ou residuais, as propriedades da 
série temporal são, por padrão, não preservadas e 2) lags ou diferenças não 
podem ser especificados diretamente na fórmula em `lm()`.

Alternativamente, o pacote [dynlm](https://CRAN.R-project.org/package=dynlm) (@zeileis2008) fornece a função `dynlm()`, tenta superar os problemas 
descritos acima. Para estimar os parâmetros do CAPM deste exercício, 
a sintáxe da fórmula do modelo é a mesma da função `lm()`. Isto é, para 
estimar um modelo de regressão simples, como o CAPM neste exercício, 
basta fazer:  

`capm_teste <- dynlm(y ~ x)`


### Questão 2.1 

Estime o CAPM para os retornos excedentes da Oracle, utilizando os retornos 
excedentes do índice S&P(500) como os retornos dacarteira de mercado usando a 
função `dynlm` do pacote dynlm. Exiba os resultados da estimação usando 
a função `summary(capm_teste)`.


### Questão 2.2

Como pode ser verificado na revisão do CAPM, podemos testar sua validade
estimando o seguinte modelo de regressão linear simples:

$$
y_t = \alpha_i + \beta_i x_t + \varepsilon_{it} \sim N(0, \sigma)
$${#eq-1}

Assim, podemos verificar (parcialmente) a validade das previsões teóricas do 
CAPM checando duas implicações do modelo:

- Segundo o CAPM, a estimatvia de $\hat{\alpha}$ (@eq-1) não deve ser 
significativamente diferente de zero. 


- Ainda conforme o CAPM, a relação entre $y_t$ e $x_t$ deve ser linear. 
Isto é, o modelo linear descrito pelo CAPM deve ser adequado para modelar a 
relação entre $y_t$ e $x_t$. 

**a.** Em relação à estimatvia de $\hat{\alpha}$, o resultado obtido para a 
Oracle suporta ou não a previsão do CAPM?

**b.** faça um gráfico de dispersão entre os retornos excedentes do índice S&P 
(500), no eixo x, e os retornos excedentes da oracle, no eixo y. Além disso, 
inclua a reta de regressão estimada (linha característica) no gráfico, utilize 
o `ggplot2`. Observando esse gráfico de dispersão, qual a sua avaliação sobre a validade do modelo linear proposto pelo CAPM?

**c.** Efetue o teste RESET para testar formalmente a adequação do modelo linear. 
Para implementar esse teste, faça uma regressão linear simples entre 
`reoracle` e `resandp` usando a função `lm`:

```{r}
#| eval: false
capm_linear <- lm(reoracle ~ resandp, data = capm)
```

em seguida, execute o teste RESET fazendo:

```{r}
#| eval: false
resettest(capm_linear, type = "regressor")
```

A função `resettest` do pacote `lmtest` não aceita séries temporais como 
argumentos, por isso foi necessário efetuar o procedimento acima. 

Se a hipótese nula do teste RESET é a de que um modelo linear é 
adequado, observando o valor-p do teste, qual sua conclusão sobre 
a adequação do modelo linear previsto pelo CAPM com base no resultado 
do teste?


### Questão 2.3

Interprete o $R^2$-ajustado do modelo estimado. Descreva elementos que possam 
explicar o $R^2$-ajustado obtido e possibilidades de "melhoria" desta 
medida de acurácia explicativa do modelo.


### Questão 2.4

Efetue o teste de Jarque-Bera de normalidade dos resíduos do modelo, use a
função `JarqueBeraTest(capm_teste$residuals, robust = TRUE)` do 
pacote `DescTools`. Interprete o resultado observando o valor-p do teste. 
Descreva brevemente as consequências do resultado.









